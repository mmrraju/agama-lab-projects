Flow forget.pw
     Basepath ""
     Configs smtp
authService = Call io.jans.as.server.service.AuthenticationService#class 
authServiceInstance = Call io.jans.service.cdi.util.CdiUtil#bean authService
userService = Call io.jans.as.server.service.UserService#class 
userServiceInstance = Call io.jans.service.cdi.util.CdiUtil#bean userService
authResult = {}
userMail = {}
otp = {}
newPassword = {}
Repeat 3 times max
     creds = RRF "login.ftlh" authResult
     authResult.success = Call authServiceInstance authenticate creds.username creds.password
     authResult.uid = creds.username
     // If try to reset password
     When creds.forgotpassword is true
          Log "@info test"
          loadMail = RRF "mail.ftlh" userMail
          user  = Call userServiceInstance getUserByAttribute "mail" loadMail.mail
          userMail.mail = loadMail.mail
          When user is not null
               Log "@info User found for user mail : " userMail.mail
               randomOtp = Call co.AgamaEmail#generateOtp 
               userMail.success = Call co.AgamaEmail#send host port userName password userMail.mail "Otp" randomOtp
               When userMail.success is true
                    Log "@info Otp Send successfully"
               Repeat 2 times max
                    userOtp = RRF "otp.ftlh" otp
                    otp.value = userOtp.value
                    When otp.value is randomOtp
                         Log "@info Otp match"
                         userPw = RRF "pwreset.ftlh" newPassword
                         newPassword.value = userPw.password
                         updatedUser = Call co.AgamaEmail#updateUser user  newPassword.value
                         savedUpdatedUser = Call userServiceInstance updateUser updateUser
                         newPassword.success = Call authServiceInstance authenticate creds.username newPassword.value
                         it_cnozx = {success:true, data: { userId: user.getUserId}}
                         Finish it_cnozx
                    Log "@info otp not match"
          Log "@info User not found for mail : " userMail.mail
          it_scjin = {success:false, error: "No user found associate with mail"}
          Finish it_scjin
     Log "@info Chose to validate user"
     When authResult.success is true
          Log "@info Successfully login"
          it_dpnui = {success:true, data: { userId: creds.username}}
          Finish it_dpnui
it_gresl = {success:false, error: "Failed to Authentication"}
Finish it_gresl